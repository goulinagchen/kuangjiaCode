<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapperResultMap">
	<!-- public Employee getEmpById(Integer id ); -->
	<select id="getEmpById" resultMap="MyEmp">
		select * from tbl_employee where id = #{id}
	</select>
	
	<!-- 
		resultMap:用来声明自定义的映射.
			type:指定映射的类型
			id:唯一标识
	 -->
	<resultMap type="com.atguigu.mybaits.beans.Employee" id="MyEmp">
		<!-- 自定义的映射规则 
			id: 定义主键的映射. 底层会有优化.
			result:定义普通列的映射.
			column:指定列名
			property:指定属性名
		-->
		<id column="id"  property="id" />
		<result column="last_name" property="lastName"/>
		<result column="email" property="email"/>
		<result column="gender" property="gender"/>
	</resultMap>
	
	<!-- 
		需求一: 
		    查询Employee的同时查询员工对应的部门信息.
		  public Employee getEmpAndDept(Integer id );
	 -->
	 <select id="getEmpAndDept" resultMap="MyEmpAndDept">
	 	select e.id eid ,e.last_name last_name, e.gender gender, 
	 	       e.email email ,d.id did ,d.dept_name dept_name
	 	from tbl_employee e ,tbl_dept d
	 	where e.d_id = d.id and e.id = #{id} 
	 </select>
	 <!-- 
	 	   eid  last_name  gender   email            did  dept_name  
           1001  Tom        1       tom@sina.com       1  开发部  
	 
	  -->
	 <resultMap type="com.atguigu.mybaits.beans.Employee" id="MyEmpAndDept">
	 	<id column="eid" property="id"/>
	 	<result column="last_name" property="lastName"/>
	 	<result column="gender" property="gender"/>
	 	<result column="email" property="email"/>
	 	<!-- 使用级联的方式
		 	<result column="did" property="dept.id"/>
		 	<result column="dept_name"  property="dept.departmentName" />
	 	 -->
	 	 <!-- 
	 	 	association:用来映射关系属性 
	 	 	property: 指定关系属性
	 	 	javaType: 指定关系属性的类型
	 	 -->
	 	 <association property="dept" javaType="com.atguigu.mybaits.beans.Department">
	 	 	<id column="did" property="id"/>
	 	 	<id column="dept_name" property="departmentName"/>
	 	 </association>
	 </resultMap>
</mapper>